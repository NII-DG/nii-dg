name: release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build_wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Install dependencies
        run: |
          python3 -m pip install --no-cache-dir --progress-bar off -U pip setuptools wheel
      - name: Build distributions
        run: |
          python3 setup.py sdist bdist_wheel
      - name: Upload sdist to artifact
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/nii_dg-1.0.0.tar.gz
      - name: Upload wheel to artifact
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: dist/nii_dg-1.0.0-py3-none-any.whl

  deploy_ghcr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag name
        run: |
          echo "TAG_NAME=$(date +%y%m%d)_$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/nii_dg:${{ env.TAG_NAME }}
            ghcr.io/${{ github.repository_owner }}/nii_dg:latest

  crate_release:
    runs-on: ubuntu-latest
    needs: build_wheel
    runs-on: ubuntu-latest
    steps:
      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: sdist
      - name: Download wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel
      - name: Tag name
        run: |
          echo "TAG_NAME=$(date +%y%m%d)_$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Create release
        run: |
          gh release --repo ${{ github.repository }} create ${{ env.TAG_NAME }} --title ${{ env.TAG_NAME }} --generate-notes dist/nii_dg-1.0.0.tar.gz dist/nii_dg-1.0.0-py3-none-any.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
