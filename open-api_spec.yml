openapi: 3.0.0
info:
  title: "NII-DG Core API"
  version: "1.0.0"
  description: Data governance function
#   contact:
#     name: Contact Name
#     email: contact@example.com
#     url: https://example.com/
# tags:
#   - name: Metadata
#     description: Metadata related requests
# servers:
#   - url: https://example.com
paths:
  /crates:
    post:
      operationId: doValidation
      summary: Validate ro-crate of NII schema
      # tags: [ 'Metadata' ]
      responses:
        '200':
          description: Successfully accepted the request of ro-crate validation and returned request ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
        '400':
          $ref: '#/components/responses/400Error'
      requestBody:
       required: true
       content:
        application/json:
         schema:
          type: object
          required:
            - '@context'
            - '@graph'
          properties:
            '@context':
              type: string
            '@graph':
              type: array
              items:
                type: object
  /crates/{requestId}:
    get:
      description: Get information about crate validation status
      responses:
        '200':
          description: Successfully get the status of ro-crate validation. Once the validation is completed, the results will also returned.
          content:
            application/json:
              schema:
                type: object
                required:
                  - "status"
                properties:
                  status:
                    type: string
                  results:
                    type: object
        '400':
          $ref: '#/components/responses/400Error'
      parameters:
        - $ref: '#/components/parameters/RequestId'
  /crates/entities:
    post:
      operationId: doValidation
      summary: Validate ro-crate of NII schema partially
      # tags: [ 'Metadata' ]
      responses:
        '200':
          description: Successfully accepted the request of partial ro-crate validation and returned request ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
        '400':
          $ref: '#/components/responses/400Error'
      parameters:
        - name: entityID
          in: query
          required: true
          schema:
            type: string
      requestBody:
       required: true
       content:
        application/json:
         schema:
          type: object
          required:
            - '@context'
            - '@graph'
  /crates/entities/{requestId}:
    get:
      description: Get information about crate partial validation status
      responses:
        '200':
          description: Successfully get the status of ro-crate validation. Once the validation is completed, the results will also returned.
          content:
            application/json:
              schema:
                type: object
                required:
                  - "status"
                properties:
                  status:
                    type: string
                  entityId:
                    type: string
                  results:
                    type: object
        '400':
          $ref: '#/components/responses/400Error'
    parameters:
        - $ref: '#/components/parameters/RequestId'
  /healthcheck:
    get:
      operationId: doValidation
      summary: for monitoring
      responses:
        '200':
          description: Successfully accessed to API server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
components:
  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
  parameters:
    RequestId:
      name: requestId
      in: path
      required: true
      schema:
        type: string
