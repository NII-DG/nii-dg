openapi: "3.0.0"
info:
  title: "NII-DG REST API Specification"
  version: "1.0.0"
  description: "A REST API specification for performing data governance in the context of research."
  license:
    name: "Apache 2.0"
    url: "https://raw.githubusercontent.com/NII-DG/nii-dg/main/Licence.txt"
paths:
  /validate:
    post:
      summary: Validate an RO-Crate using NII-DG library.
      description: |
        Validates an RO-Crate produced using the NII-DG library or compliant with the NII-DG schema.
        The RO-Crate needs to be supplied in the request body.
        For validation of specific entities only, include the entity IDs in the query parameters.
      responses:
        200:
          $ref: "#/components/responses/RequestIdResponse"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ROCrate"
      parameters:
        - $ref: "#/components/parameters/entityIds"
  /{requestId}:
    get:
      summary: Retrieve validation results.
      description: |
        Obtain the status and results of a validation procedure for the specified request ID.
      responses:
        200:
          $ref: "#/components/responses/ResultResponse"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"
      parameters:
        - $ref: "#/components/parameters/requestId"
  /{requestId}/cancel:
    post:
      summary: Abort a validation procedure.
      description: |
        Issue a request to terminate an ongoing validation procedure.
      responses:
        200:
          $ref: "#/components/responses/RequestIdResponse"
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalServerError"
      parameters:
        - $ref: "#/components/parameters/requestId"
  /healthcheck:
    get:
      summary: Endpoint health check.
      description: |
        Responds with `OK` if the application server is operating normally.
      responses:
        200:
          $ref: "#/components/responses/HealthCheck"
        500:
          $ref: "#/components/responses/InternalServerError"
components:
  schemas:
    RequestId:
      type: string
      format: uuid
      example: 7755fb3d-09f1-46e0-ac6e-d88e4d82cb05
    RequestIdResponse:
      type: object
      properties:
        requestId:
          $ref: "#/components/schemas/RequestId"
    ROCrate:
      type: object
      additionalProperties: true
      description: RO-Crate object. The RO-Crate schema is dependent on the NII-DG library.
      example:
        {
          "@context": "https://w3id.org/ro/crate/1.1/context",
          "@graph":
            [
              {
                "@id": "ro-crate-metadata.json",
                "@type": "CreativeWork",
                "conformsTo": { "@id": "https://w3id.org/ro/crate/1.1" },
                "about": { "@id": "./" },
              },
              {
                "@id": "./",
                "@type": "Dataset",
                "hasPart": [],
                "name": "example research project",
                "datePublished": "2023-01-20T02:35:21.875+00:00",
                "@context": "https://raw.githubusercontent.com/ascade/nii_dg/develop/schema/context/base/RootDataEntity.json",
              },
            ],
        }
    EntityId:
      type: string
      example: "path/to/file"
    EntityIds:
      nullable: true
      type: array
      items:
        $ref: "#/components/schemas/EntityId"
    ValidationRequest:
      type: object
      properties:
        roCrate:
          $ref: "#/components/schemas/ROCrate"
        entityIds:
          $ref: "#/components/schemas/EntityIds"
    ValidationStatus:
      type: string
      enum:
        - UNKNOWN
        - QUEUED
        - RUNNING
        - COMPLETE
        - FAILED
        - EXECUTOR_ERROR
        - CANCELING
        - CANCELED
    ValidationResult:
      type: object
      properties:
        entityId:
          $ref: "#/components/schemas/EntityId"
        prop:
          type: string
          example: "amed.File:remoteLocation"
        reason:
          type: string
          example: Unable to fetch remote URL.
    ResultResponse:
      description: Result of the validation procedure. The schema for the result is determined by the NII-DG library.
      type: object
      properties:
        requestId:
          $ref: "#/components/schemas/RequestId"
        request:
          $ref: "#/components/schemas/ValidationRequest"
        status:
          $ref: "#/components/schemas/ValidationStatus"
        results:
          type: array
          items:
            $ref: "#/components/schemas/ValidationResult"
    BadRequest:
      type: object
      properties:
        message:
          type: string
          example: Invalid request format.
    NotFound:
      type: object
      properties:
        message:
          type: string
          example: Requested path not found.
    InternalServerError:
      type: object
      properties:
        message:
          type: string
          example: Server encountered an error.
    HealthCheck:
      type: object
      properties:
        message:
          type: string
          example: OK.
          description: Service status.
  responses:
    RequestIdResponse:
      description: Response includes the request ID.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RequestIdResponse"
    ResultResponse:
      description: Response contains validation outcomes.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResultResponse"
    BadRequest:
      description: Response to a malformed request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequest"
    NotFound:
      description: Response for a request to a non-existent path.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFound"
    InternalServerError:
      description: Response to a server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerError"
    HealthCheck:
      description: Health status response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HealthCheck"
  parameters:
    entityIds:
      name: entityIds
      in: query
      description: Entity ID list for selective validation. If this parameter is not supplied, all entities in the RO-Crate will be validated.
      required: false
      schema:
        $ref: "#/components/schemas/EntityIds"
      example:
        - "path/to/file"
        - "https://example.com/path/to/file"
    requestId:
      name: requestId
      in: path
      description: Identifier of the validation request.
      required: true
      schema:
        $ref: "#/components/schemas/RequestId"
